uniform vec2 pozLights;
uniform vec3 colourLights;
uniform float heightScreen;
uniform float radius;
uniform float intensity;
uniform float angle;
uniform vec2 direction;
uniform sampler2D nMaps;

void main()
{		
	vec2 pixel=gl_FragCoord.xy;		
	pixel.y=heightScreen-pixel.y;	
	vec2 aux=pozLights-pixel;
	float d=length(aux);
	vec4 color=vec4(0.0, 0.0, 0.0, 1.0);
	
	vec3 normal=texture2D(nMaps, gl_TexCoord[0].st).rgb;
	normal=normal*2.0-1.0;
	normal=normalize(normal);
	
	vec3 dd=vec3(aux.x, aux.y, 0.0);
	
	if(d<=radius)
	{			
                float desc=1.0/d*intensity*10.0;
		float shadows=max(dot(normalize(dd), normal), 0.0);				
		float granicaOpada = clamp((1.0f - d / radius), 0.0, 1.0);
		vec3 condition=vec3(1.0, 1.0, 1.0);
		if(texture2D(nMaps, gl_TexCoord[0].st).rgb==condition)
			shadows=0.05;
		if(dot(normalize(aux), direction)<angle*d/radius)
                        shadows=0.0;
		color=vec4(desc*shadows,desc*shadows,desc*shadows,1.0)*vec4(colourLights*granicaOpada,1.0);		
	}		
	
	gl_FragColor = color;
}
